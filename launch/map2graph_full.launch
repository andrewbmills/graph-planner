<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <!-- Map to Graph Node -->
  <node pkg="graph-planner" type="map2graph_full.py" name="map2graph" output="screen">
    <!-- Inputs (Subscribed Topic Names) -->
    <remap from="odometry" to="husky_odom"/>
    <!-- <remap from="odometry" to="/X1/odometry"/> -->

    <!-- Map data in a PointCloud2 msg.  Either an ESDF or Occupancy grid message -->
    <!-- <remap from="pointcloud" to="/octomap_point_cloud_centers_free"/> -->
    <!-- <remap from="pointcloud" to="/voxblox_node/esdf_pointcloud"/> -->
    <remap from="occupancy" to="map"/>

    <!-- Outputs (Published Topic Names) -->
    <!-- <remap from="node_skeleton/closest_node" to="demo/node_skeleton/closest_node"/> -->
    <!-- <remap from="node_skeleton/closest_edges" to="demo/node_skeleton/closest_edges"/> -->
    <!-- <remap from="node_skeleton/closest_node_poses" to="demo/node_skeleton/closest_node_poses"/> -->

    <!-- Parameters -->
    <!-- Size of the map voxels -->
    <param name="voxel_size" value="0.2"/>

    <!-- Map type is either Voxblox (ESDF) or Octomap or OccupancyGrid -->
    <param name="mapType" value="OccupancyGrid"/>

    <!-- Update rate in (Hz) -->
    <param name="rate" value="1.0"/>

    <!-- "plotting" is whether or not to output the full result maplotlib plot.  "plot_steps" is for debugging -->
    <param name="plotting" value="1"/>
    <param name="plot_steps" value="0"/>

    <!-- Gaussian kernel parameters for blurring the 2D occupancy grid -->
    <param name="map_blur" value="2.0"/>
    <param name="map_threshold" value="0.5"/>

    <!-- Seen vs Unseen filter instead of occGrid -->
    <param name="seen_unseen_filter" value="0"/>

    <!-- Unexplored Node detection parameters -->
    <!-- Minimum number of connected frontier pixels for clustering -->
    <param name="frontier_cluster_thresh" value="80"/>

    <!-- All occupancy probabilities below this value are considered free for frontier finding -->
    <param name="free_thresh" value="49.5"/>

    <!-- Graph fence -->
    <!-- Only considers x positions greater than this threshold -->
    <param name="x_entrance_filter" value="-1.0"/>

    <!-- Short unseen edge filter -->
    <!-- Unseen edges shorter than this length will be considered explored -->
    <param name="unseen_edge_filter" value="7.0"/>

  </node>

  <!-- Graph plotting in rviz node -->
  <node name="graphmsg2rviz" pkg="graph-planner" type="graphmsg2rviz.py"  output="screen">
    <!-- Graph msg -->
    <!-- <remap from="graph" to="demo/node_skeleton/graph"/> -->
    <!-- Rviz topics -->
    <remap from="ExploredEdges" to="node_skeleton/rviz_plugin/ExploredEdges"/>
    <remap from="UnexploredEdges" to="node_skeleton/rviz_plugin/UnexploredEdges"/>
    <remap from="CurrentEdge" to="node_skeleton/rviz_plugin/CurrentEdge"/>

    <!-- Parameters -->
    <param name="rate" value="5.0"/>
    <param name="fixed_frame" value="world"/>
  </node>

  <!-- Path planning node -->
  <node pkg="graph-planner" type="graph2path.py" name="graph2path" output="screen">
    <!-- Inputs (Subscribed Topic Names) -->
    <!-- Graph msg -->
    <!-- <remap from="graph" to="demo/node_skeleton/graph"/> -->
    <!-- Odometry msg -->
    <!-- <remap from="odometry" to="/jackal_odom"/> -->
    <remap from="odometry" to="husky_odom"/>
    <!-- <remap from="odometry" to="/X1/odometry"/> -->

    <!-- Set to "Explore" by default.  "Explore" goes to the nearest unexplored edge in the graph.  "Home" goes back to node 0. -->
    <!-- <remap from="task" to="/X1/task"/> -->
    <!-- A Twist msg using a proportional controller to turn to the "next_turn" heading at the next node -->
    <!-- <remap from="cmd_turn_junction" to="/X1/cmd_vel_junction"/> -->

    <!-- Outputs (Published Topic Names) -->
    <!-- True if the vehicle is within node_radius of a node in the graph msg -->
    <!-- <remap from="at_a_node" to="/X1/at_a_node"/> -->
    <!-- Yaw angle (in radians) in inertial frame to turn to at the next node/junction -->
    <!-- <remap from="next_turn" to="/X1/next_turn"/> -->

    <!-- Rviz plotting remaps -->
    <remap from="next_turn_pose" to="node_skeleton/next_turn_pose"/>
    <remap from="turn_list_poses" to="node_skeleton/turn_list_poses"/>

    <!-- Parameters -->
    <!-- Update rate (Hz) -->
    <param name="rate" value="3.0"/>

    <!-- Fixed frame string -->
    <!-- <param name="fixed_frame" value="world"/> -->

    <!-- Speed for node Twist command in m/s -->
    <!-- <param name="speed" value="1.0"/> -->
    
    <!-- Radius for detecting whether or not the robot is at a node -->
    <param name="node_radius" value="3.0"/>
   </node>

   <!-- <include file="$(find graph-planner)/launch/centering.launch"/> -->
</launch>